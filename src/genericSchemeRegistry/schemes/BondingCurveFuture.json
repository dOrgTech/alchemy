{
  "name": "Bonding Curve Future",
  "addresses": {
    "main": ["0x54F2560b05888b9f898E5e16aD98135B6e0813F5"],
    "rinkeby": ["0x54F2560b05888b9f898E5e16aD98135B6e0813F5"],
    "private": ["0xEea6eFa87e6190930862348EBF7713745Fff7E3D"]
  },
  "actions": [
    {
      "id": "deployBancor",
      "label": "Deploy Bonding Curve",
      "description": "Deploy a new bonding curve with specified parameters, complete with new bonded token. Details can be found <a target=\"_blank\" href=\"https://github.com/dOrgTech/BC-DAO\">here</a>.",
      "notes": "https://github.com/dOrgTech/BC-DAO",
      "fields": [
        {
          "name": "beneficiary",
          "label": "Beneficiary address",
          "placeholder": "Address (0x0000…)"
        },
        {
          "name": "owner",
          "label": "Owner address",
          "placeholder": "Address (0x0000…)"
        },
        {
          "name": "collateralToken",
          "label": "Collateral token address",
          "placeholder": "Address (0x0000…)"
        },
        {
          "name": "buyCurveParams",
          "label": "Buy curve reserveRatio",
          "placeholder": "Ratio in ppm (1-1000000)",
          "decimals": 0
        },
        {
          "name": "sellCurveParams",
          "label": "Sell curve reserveRatio",
          "placeholder": "Ratio in ppm (1-1000000)",
          "decimals": 0
        },
        {
          "name": "splitOnPay",
          "label": "Income split to beneficiary",
          "placeholder": "Percentage to beneficiary (0-100)",
          "decimals": 0
        },
        {
          "name": "bondedTokenName",
          "label": "Bonded token name",
          "placeholder": "Bonded Token"
        },
        {
          "name": "bondedTokenSymbol",
          "label": "Bonded token symbol",
          "placeholder": "BND"
        }
      ],
      "abi": {
        "constant": false,
        "inputs": [
          { "name": "beneficiary", "type": "address" },
          { "name": "owner", "type": "address" },
          { "name": "collateralToken", "type": "address" },
          { "name": "buyCurveParams", "type": "uint32" },
          { "name": "sellCurveParams", "type": "uint32" },
          { "name": "splitOnPay", "type": "uint256" },
          { "name": "bondedTokenName", "type": "string" },
          { "name": "bondedTokenSymbol", "type": "string" }
        ],
        "name": "deployBancor",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      }
    },
    {
      "id": "buy",
      "label": "Buy Tokens",
      "description": "Buy bondedTokens with collateralTokens",
      "notes": "https://github.com/gnosis/dx-contracts/blob/c9a9bd0d73f96eed65dca5c5a947451adb8e80b6/contracts/DutchExchange.sol#L248",
      "fields": [
        {
          "label": "Bonding Curve Address",
          "name": "curveAddress",
          "placeholder": "Address (0x0000…)"
        },
        {
          "decimals": 18,
          "label": "Tokens to buy",
          "name": "numTokens",
          "unit": "USD",
          "placeholder": "Amount in BondedTokens (1500)"
        },
        {
          "decimals": 18,
          "label": "Max total price",
          "name": "maxPrice",
          "unit": "USD",
          "placeholder": "Amount in CollateralTokens (1500)"
        },
        {
          "label": "Purchase recipient",
          "name": "recipient",
          "unit": "USD",
          "placeholder": "Address (0x0000…)"
        }
      ],
      "abi": {
        "constant": false,
        "inputs": [
          {
            "name": "curveAddress",
            "type": "address"
          },
          {
            "name": "numTokens",
            "type": "uint256"
          },
          {
            "name": "maxPrice",
            "type": "uint256"
          },
          {
            "name": "recipient",
            "type": "address"
          }
        ],
        "name": "buy",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      }
    },
    {
      "id": "sell",
      "label": "Sell Tokens",
      "description": "Sell bonded tokens for collateral",
      "notes": "https://github.com/gnosis/dx-contracts/blob/c9a9bd0d73f96eed65dca5c5a947451adb8e80b6/contracts/DutchExchange.sol#L252",
      "fields": [
        {
          "label": "Bonding Curve Address",
          "name": "curveAddress",
          "placeholder": "Address (0x0000…)"
        },
        {
          "decimals": 18,
          "label": "Tokens to sell",
          "name": "numTokens",
          "unit": "USD",
          "placeholder": "Amount in BondedTokens (1500)"
        },
        {
          "decimals": 18,
          "label": "Min total price",
          "name": "minPrice",
          "unit": "USD",
          "placeholder": "Amount in CollateralTokens (1500)"
        },
        {
          "label": "Reward recipient",
          "name": "recipient",
          "unit": "USD",
          "placeholder": "Address (0x0000…)"
        }
      ],
      "abi": {
        "constant": false,
        "inputs": [
          {
            "name": "curveAddress",
            "type": "address"
          },
          {
            "name": "numTokens",
            "type": "uint256"
          },
          {
            "name": "minPrice",
            "type": "uint256"
          },
          {
            "name": "recipient",
            "type": "address"
          }
        ],
        "name": "sell",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      }
    },
    {
      "id": "pay",
      "label": "Pay Tokens",
      "description": "Send a payment to a DAO via it's bonding curve",
      "notes": "https://github.com/gnosis/dx-contracts/blob/c9a9bd0d73f96eed65dca5c5a947451adb8e80b6/contracts/DutchExchange.sol#L252",
      "fields": [
        {
          "label": "Bonding Curve Address",
          "name": "curveAddress",
          "placeholder": "Address (0x0000…)"
        },
        {
          "decimals": 18,
          "label": "Tokens to pay",
          "name": "amount",
          "unit": "USD",
          "placeholder": "Amount in CollateralTokens (1500)"
        }
      ],
      "abi": {
        "constant": false,
        "inputs": [
          {
            "name": "curveAddress",
            "type": "address"
          },
          {
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "pay",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      }
    },
    {
      "id": "approve",
      "label": "ERC20 Approve",
      "description": "Approve specified contract to spend tokens",
      "notes": "https://github.com/gnosis/dx-contracts/blob/c9a9bd0d73f96eed65dca5c5a947451adb8e80b6/contracts/DutchExchange.sol#L248",
      "fields": [
        {
          "label": "Token Address",
          "name": "tokenAddress",
          "placeholder": "Address (0x0000…)"
        },
        {
          "label": "Spender",
          "name": "spender",
          "placeholder": "Address (0x0000…)"
        },
        {
          "decimals": 18,
          "label": "Value",
          "name": "value",
          "unit": "Tokens",
          "placeholder": "Amount in ERC20 Tokens (1500)"
        }
      ],
      "abi": {
        "constant": false,
        "inputs": [
          {
            "name": "tokenAddress",
            "type": "address"
          },
          {
            "name": "spender",
            "type": "address"
          },
          {
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "approve",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      }
    },
    {
      "id": "setBeneficiary",
      "label": "Change Curve Beneficiary",
      "description": "Change Curve Beneficiary",
      "notes": "https://github.com/gnosis/dx-contracts/blob/master/contracts/base/EthOracle.sol",
      "fields": [
        {
          "label": "Bonding Curve Address",
          "name": "curveAddress",
          "placeholder": "Address (0x0000…)"
        },
        {
          "label": "New beneficiary adddress",
          "name": "beneficiary",
          "placeholder": "Address (0x0000…)"
        }
      ],
      "abi": {
        "constant": false,
        "inputs": [
          {
            "name": "curveAddress",
            "type": "address"
          },
          {
            "name": "beneficiary",
            "type": "address"
          }
        ],
        "name": "setBeneficiary",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      }
    },
    {
      "id": "setBuyCurve",
      "label": "Change Buy Curve",
      "description": "Change Curve Beneficiary",
      "notes": "https://github.com/gnosis/dx-contracts/blob/master/contracts/base/EthOracle.sol",
      "fields": [
        {
          "label": "Bonding Curve Address",
          "name": "curveAddress",
          "placeholder": "Address (0x0000…)"
        },
        {
          "label": "New buy curve adddress",
          "name": "buyCurve",
          "placeholder": "Address (0x0000…)"
        }
      ],
      "abi": {
        "constant": false,
        "inputs": [
          {
            "name": "curveAddress",
            "type": "address"
          },
          {
            "name": "buyCurve",
            "type": "address"
          }
        ],
        "name": "setBuyCurve",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      }
    },
    {
      "id": "setSellCurve",
      "label": "Change Sell Curve",
      "description": "Change Curve Beneficiary",
      "notes": "https://github.com/gnosis/dx-contracts/blob/master/contracts/base/EthOracle.sol",
      "fields": [
        {
          "label": "Bonding Curve Address",
          "name": "curveAddress",
          "placeholder": "Address (0x0000…)"
        },
        {
          "label": "New sell curve adddress",
          "name": "sellCurve",
          "placeholder": "Address (0x0000…)"
        }
      ],
      "abi": {
        "constant": false,
        "inputs": [
          {
            "name": "curveAddress",
            "type": "address"
          },
          {
            "name": "sellCurve",
            "type": "address"
          }
        ],
        "name": "setSellCurve",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      }
    },
    {
      "id": "setSplitOnPay",
      "label": "Change Payment Split",
      "description": "The 'Split On Pay' determines the percentage of incoming funds that are sent to the beneficiary. The remainder is distributed among the dividend holders",
      "notes": "https://github.com/gnosis/dx-contracts/blob/master/contracts/base/EthOracle.sol",
      "fields": [
        {
          "label": "Bonding Curve Address",
          "name": "curveAddress",
          "placeholder": "Address (0x0000…)"
        },
        {
          "label": "New split on pay",
          "name": "splitOnPay",
          "placeholder": "Address (0x0000…)"
        }
      ],
      "abi": {
        "constant": false,
        "inputs": [
          {
            "name": "curveAddress",
            "type": "address"
          },
          {
            "name": "splitOnPay",
            "type": "uint256"
          }
        ],
        "name": "setSplitOnPay",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      }
    }
  ]
}
