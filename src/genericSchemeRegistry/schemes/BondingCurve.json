{
  "name": "BondingCurve",
  "addresses": {
    "main": ["0x54F2560b05888b9f898E5e16aD98135B6e0813F5"],
    "rinkeby": ["0x54F2560b05888b9f898E5e16aD98135B6e0813F5"],
    "private": ["0x54F2560b05888b9f898E5e16aD98135B6e0813F5"]
  },
  "actions": [
    {
      "id": "buy",
      "label": "Buy Tokens",
      "description": "Buy bondedTokens with collateralTokens",
      "notes": "https://github.com/gnosis/dx-contracts/blob/c9a9bd0d73f96eed65dca5c5a947451adb8e80b6/contracts/DutchExchange.sol#L248",
      "fields": [
        {
          "decimals": 18,
          "label": "Tokens to buy",
          "name": "numTokens",
          "unit": "USD",
          "placeholder": "Amount in BondedTokens (1500)"
        },
        {
          "decimals": 18,
          "label": "Max total price",
          "name": "maxPrice",
          "unit": "USD",
          "placeholder": "Amount in CollateralTokens (1500)"
        },
        {
          "label": "Purchase recipient",
          "name": "recipient",
          "unit": "USD",
          "placeholder": "Address (0x0000…)"
        }
      ],
      "abi": {
        "constant": false,
        "inputs": [
          {
            "name": "curveAddress",
            "type": "address"
          },
          {
            "name": "numTokens",
            "type": "uint256"
          },
          {
            "name": "maxPrice",
            "type": "uint256"
          },
          {
            "name": "recipient",
            "type": "address"
          }
        ],
        "name": "buy",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      }
    },
    {
      "id": "sell",
      "label": "Sell Tokens",
      "description": "Sell bonded tokens for collateral",
      "notes": "https://github.com/gnosis/dx-contracts/blob/c9a9bd0d73f96eed65dca5c5a947451adb8e80b6/contracts/DutchExchange.sol#L252",
      "fields": [
        {
          "decimals": 18,
          "label": "Tokens to sell",
          "name": "numTokens",
          "unit": "USD",
          "placeholder": "Amount in BondedTokens (1500)"
        },
        {
          "decimals": 18,
          "label": "Min total price",
          "name": "minPrice",
          "unit": "USD",
          "placeholder": "Amount in CollateralTokens (1500)"
        },
        {
          "label": "Reward recipient",
          "name": "recipient",
          "unit": "USD",
          "placeholder": "Address (0x0000…)"
        }
      ],
      "abi": {
        "constant": false,
        "inputs": [
          {
            "name": "numTokens",
            "type": "uint256"
          },
          {
            "name": "minPrice",
            "type": "uint256"
          },
          {
            "name": "recipient",
            "type": "address"
          }
        ],
        "name": "sell",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      }
    },
    {
      "id": "pay",
      "label": "Pay Tokens",
      "description": "Send a payment to a DAO via it's bonding curve",
      "notes": "https://github.com/gnosis/dx-contracts/blob/c9a9bd0d73f96eed65dca5c5a947451adb8e80b6/contracts/DutchExchange.sol#L252",
      "fields": [
        {
          "decimals": 18,
          "label": "Tokens to pay",
          "name": "amount",
          "unit": "USD",
          "placeholder": "Amount in CollateralTokens (1500)"
        }
      ],
      "abi": {
        "constant": false,
        "inputs": [
          {
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "pay",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      }
    },
    {
      "id": "changeBeneficiary",
      "label": "Change Curve Beneficiary",
      "description": "Change Curve Beneficiary",
      "notes": "https://github.com/gnosis/dx-contracts/blob/master/contracts/base/EthOracle.sol",
      "fields": [
        {
          "label": "New beneficiary adddress",
          "name": "beneficiary",
          "placeholder": "Address (0x0000…)"
        }
      ],
      "abi": {
        "constant": false,
        "inputs": [
          {
            "name": "beneficiary",
            "type": "address"
          }
        ],
        "name": "setBeneficiary",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      }
    }
  ]
}
